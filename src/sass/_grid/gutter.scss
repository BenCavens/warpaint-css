@include small-view(){

    .gutter{
        [class*="column-"], .column {
            margin-left: #{($space-m / 1rem)+"%"};
            margin-bottom: #{($space-m / 1rem) +"%"};
        }

        margin-left: -#{($space-m / 1rem)+"%"};
        margin-bottom: -#{($space-m / 1rem) - 0.1 +"%"};
    }

    @each $size,$space in $sizes
    {
        .gutter-#{$size} .column {
            margin-left: #{($space / 1rem)+"%"};
            margin-bottom: #{($space / 1rem) +"%"};
        }

        .gutter-#{$size}{
            [class*="column-"]{
                margin-left: #{($space / 1rem)+"%"};
                margin-bottom: #{($space / 1rem)+"%"};
            }
            margin-left: -#{($space / 1rem)+"%"};
            margin-bottom: -#{($space / 1rem) - 0.1 +"%"};
        }

        @for $i from 1 through $grid-columns {
            .gutter-#{$size}{
                // target only non-breakpoint columns like .column-6 and not .m-column-6
                // The sequence from small to large is important because breakpoints are setup mobile first
                .column-#{$i}{
                    width: (100% / $grid-columns  * $i) - ($space / 1rem); // divide by unit to remove unit
                }
            }
        }
    }

    @for $i from 1 through $grid-columns {

        .gutter{
            [class*="column-#{$i}"] {
                width: (100% / $grid-columns  * $i) - ($space-m / 1rem); // divide by unit to remove unit
            }
        }
    }

}

.gutter-around{
    justify-content:space-around;
}